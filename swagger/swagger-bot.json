{
  "openapi": "3.0.0",
  "info": {
    "title": "Discord Bot Cluster API",
    "version": "1.0.1",
    "description": "API documentation for the Discord Bot Cluster management system",
    "contact": {
      "name": "Guillaume Marcq",
      "email": "contact@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API key for accessing protected endpoints"
      }
    },
    "schemas": {
      "ApiInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Discord Bot Cluster API"
          },
          "author": {
            "type": "string",
            "example": "Guillaume Marcq"
          }
        }
      },
      "BuildDeclaration": {
        "type": "object",
        "required": [
          "url",
          "message",
          "filename"
        ],
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the build artifact",
            "example": "https://example.com/builds/my-build.zip"
          },
          "message": {
            "type": "string",
            "description": "Build message or description",
            "example": "New feature implementation"
          },
          "filename": {
            "type": "string",
            "description": "Name of the build file",
            "example": "my-build-v1.0.1.zip"
          }
        }
      },
      "BuildResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Build déclaré avec succès"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1672531200000
              },
              "url": {
                "type": "string",
                "example": "https://example.com/builds/my-build.zip"
              },
              "message": {
                "type": "string",
                "example": "New feature implementation"
              },
              "filename": {
                "type": "string",
                "example": "my-build-v1.0.1.zip"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2023-01-01T00:00:00.000Z"
              }
            }
          }
        }
      },
      "GetGuildsResponse": {
        "type": "object",
        "properties": {
          "guilds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of guild IDs",
            "example": [
              "123456789012345678",
              "987654321098765432"
            ]
          }
        }
      },
      "ShardInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Shard ID",
            "example": 0
          },
          "ready": {
            "type": "boolean",
            "description": "Whether the shard is ready",
            "example": true
          },
          "error": {
            "type": "boolean",
            "description": "Whether the shard has an error",
            "example": false
          },
          "uptimeSecs": {
            "type": "number",
            "description": "Uptime in seconds",
            "example": 3600
          }
        }
      },
      "ShardStats": {
        "type": "object",
        "properties": {
          "shardCount": {
            "type": "number",
            "description": "Total number of shards",
            "example": 2
          },
          "uptimeSecs": {
            "type": "number",
            "description": "Manager uptime in seconds",
            "example": 7200
          }
        }
      },
      "GetShardsResponse": {
        "type": "object",
        "properties": {
          "shards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShardInfo"
            }
          },
          "stats": {
            "$ref": "#/components/schemas/ShardStats"
          }
        }
      },
      "SetShardPresencesRequest": {
        "type": "object",
        "required": [
          "type",
          "name"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Playing",
              "Streaming",
              "Listening",
              "Watching",
              "Custom",
              "Competing"
            ],
            "description": "Activity type",
            "example": "Playing"
          },
          "name": {
            "type": "string",
            "description": "Activity name",
            "example": "with Discord.js"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Stream URL (only for Streaming type)",
            "example": "https://twitch.tv/example"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Validation error"
          }
        }
      }
    }
  },
  "paths": {
    "/builds": {
      "post": {
        "summary": "Declare a new build",
        "description": "Declare a new build with URL, message, and filename",
        "tags": [
          "Builds"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildDeclaration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Build declared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/guilds": {
      "get": {
        "summary": "Get all guilds",
        "description": "Retrieve a list of all Discord guild IDs the bot is connected to",
        "tags": [
          "Guilds"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of guild IDs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGuildsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Get API information",
        "description": "Returns basic information about the API",
        "tags": [
          "General"
        ],
        "responses": {
          "200": {
            "description": "API information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiInfo"
                }
              }
            }
          }
        }
      }
    },
    "/shards": {
      "get": {
        "summary": "Get shard information",
        "description": "Retrieve information about all shards including status and statistics",
        "tags": [
          "Shards"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Shard information and statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shards/presence": {
      "put": {
        "summary": "Set shard presences",
        "description": "Update the presence/activity status of all shards",
        "tags": [
          "Shards"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetShardPresencesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Presence updated successfully"
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}
